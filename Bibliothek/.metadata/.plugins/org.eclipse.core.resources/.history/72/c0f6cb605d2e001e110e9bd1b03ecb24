% Simple select
autoren():-
	findall(Rows, odbc_query(mydb, 'SELECT * FROM autor', Rows), All),
	writeln(All).

% Insert new Author
insert_autor(Vorname, Nachname):-
    atomic_list_concat(['INSERT INTO autor(vorname, nachname) VALUES (?, ?)'], Query),
    odbc_prepare(mydb, Query, [varchar, varchar], Statement),
    odbc_execute(Statement, [Vorname, Nachname]),
    writeln('Author added successfully!').
insert_autor(Vorname, Nachname):-
	writeln('Author couldn\'t be added !').
	
% Delete Author
process_delete_autor(1):-
	writeln('Please type in the ID of the author to delete: '),
	read(Id),
	delete_autor_mitId(Id).
process_delete_autor(2):-
	writeln('Please type in the first name of the author to delete: '),
	read(Vorname),
	writeln('Please type in the last name of the author to delete: '),
	read(Nachname),
	delete_autor_mitName(Vorname, Nachname).

% Predicate to search for the author with the given name and return the ID
search_autor_mitName(Vorname, Nachname, AutorId) :-
    atomic_list_concat(['SELECT id FROM autor WHERE vorname LIKE \'%', Vorname, '%\' AND nachname LIKE \'%', Nachname, '%\''], Query),
    odbc_query(mydb, Query, Rows),
    findall(Id, member(row(Id), Rows), IdList),
    length(IdList, Len),
    (Len = 1 -> IdList = [AutorId] ; writeln('Multiple or no matching authors found for deletion.'), fail).

% Predicate to delete the author by ID
delete_autor_mitId(AutorId) :-
    atomic_list_concat(['DELETE FROM autor WHERE id = ', AutorId], Query),
    odbc_query(mydb, Query),
    writeln('Deletion successful.').

% Main predicate that combines the search and deletion operations
delete_autor_mitName(Vorname, Nachname) :-
    search_autor_mitName(Vorname, Nachname, AutorId),
    delete_autor_mitId(AutorId).

delete_autor_mitName(Vorname, Nachname) :-
    writeln('No matching authors found for deletion.').